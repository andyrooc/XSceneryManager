//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XSceneryManager.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XSceneryManager.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ICAO: {0}
        ///ELEVATION: {1}ft
        ///RUNWAYS:.
        /// </summary>
        internal static string AIPMask {
            get {
                return ResourceManager.GetString("AIPMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap disabled {
            get {
                object obj = ResourceManager.GetObject("disabled", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap enabled {
            get {
                object obj = ResourceManager.GetObject("enabled", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;kml xmlns=&quot;http://www.opengis.net/kml/2.2&quot; xmlns:gx=&quot;http://www.google.com/kml/ext/2.2&quot; xmlns:kml=&quot;http://www.opengis.net/kml/2.2&quot; xmlns:atom=&quot;http://www.w3.org/2005/Atom&quot;&gt;
        ///&lt;Document&gt;
        ///	&lt;name&gt;XPlaneDSFCoverage.kml&lt;/name&gt;
        ///	&lt;Style id=&quot;sn_ylw-pushpin&quot;&gt;
        ///		&lt;IconStyle&gt;
        ///			&lt;scale&gt;1.1&lt;/scale&gt;
        ///			&lt;Icon&gt;
        ///				&lt;href&gt;http://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png&lt;/href&gt;
        ///			&lt;/Icon&gt;
        ///			&lt;hotSpot x=&quot;20&quot; y=&quot;2&quot; xunits=&quot;pixels&quot; yunits=&quot;pixels&quot;/&gt;
        ///		&lt;/IconStyle&gt;
        ///		&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string KMLDSFTemplateDoc {
            get {
                return ResourceManager.GetString("KMLDSFTemplateDoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Placemark&gt;
        ///		&lt;name&gt;{0}&lt;/name&gt;
        ///		&lt;styleUrl&gt;#msn_ylw-pushpin&lt;/styleUrl&gt;
        ///		&lt;Polygon&gt;
        ///			&lt;tessellate&gt;1&lt;/tessellate&gt;
        ///			&lt;outerBoundaryIs&gt;
        ///				&lt;LinearRing&gt;
        ///					&lt;coordinates&gt;
        ///						{1:0.0#######},{2:0.0#######},0 {3:0.0#######},{4:0.0#######},0 {5:0.0#######},{6:0.0#######},0 {7:0.0#######},{8:0.0#######},0 {1:0.0#######},{2:0.0#######},0 
        ///					&lt;/coordinates&gt;
        ///				&lt;/LinearRing&gt;
        ///			&lt;/outerBoundaryIs&gt;
        ///		&lt;/Polygon&gt;
        ///	&lt;/Placemark&gt;.
        /// </summary>
        internal static string KMLPolygonPlacemark {
            get {
                return ResourceManager.GetString("KMLPolygonPlacemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;kml xmlns=&quot;http://www.opengis.net/kml/2.2&quot; xmlns:gx=&quot;http://www.google.com/kml/ext/2.2&quot; xmlns:kml=&quot;http://www.opengis.net/kml/2.2&quot; xmlns:atom=&quot;http://www.w3.org/2005/Atom&quot;&gt;
        ///&lt;Document&gt;
        ///	&lt;name&gt;XPlaneScenery.kml&lt;/name&gt;
        ///	&lt;Style id=&quot;sh_airports&quot;&gt;
        ///		&lt;IconStyle&gt;
        ///			&lt;scale&gt;1.4&lt;/scale&gt;
        ///			&lt;Icon&gt;
        ///				&lt;href&gt;http://maps.google.com/mapfiles/kml/shapes/airports.png&lt;/href&gt;
        ///			&lt;/Icon&gt;
        ///			&lt;hotSpot x=&quot;0.5&quot; y=&quot;0&quot; xunits=&quot;fraction&quot; yunits=&quot;fraction&quot;/&gt;
        ///		&lt;/IconStyle&gt;
        ///		&lt;ListSt [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string KMLTemplateHeader {
            get {
                return ResourceManager.GetString("KMLTemplateHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Placemark&gt;
        ///		&lt;name&gt;{0}-{4}&lt;/name&gt;
        ///		&lt;LookAt&gt;
        ///			&lt;longitude&gt;{1:0.########}&lt;/longitude&gt;
        ///			&lt;latitude&gt;{2:0.########}&lt;/latitude&gt;
        ///			&lt;altitude&gt;{3}&lt;/altitude&gt;
        ///			&lt;heading&gt;0&lt;/heading&gt;
        ///			&lt;tilt&gt;0&lt;/tilt&gt;
        ///			&lt;range&gt;2427.891898060267&lt;/range&gt;
        ///			&lt;gx:altitudeMode&gt;relativeToSeaFloor&lt;/gx:altitudeMode&gt;
        ///		&lt;/LookAt&gt;
        ///		&lt;styleUrl&gt;#msn_airports&lt;/styleUrl&gt;
        ///		&lt;Point&gt;
        ///			&lt;coordinates&gt;{1:0.########},{2:0.########},0&lt;/coordinates&gt;
        ///		&lt;/Point&gt;
        ///	&lt;/Placemark&gt;.
        /// </summary>
        internal static string KMLTemplatePlacemark {
            get {
                return ResourceManager.GetString("KMLTemplatePlacemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap throbber_fast {
            get {
                object obj = ResourceManager.GetObject("throbber_fast", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
